swoole是什么?
swoole实际上是一个网络通信和异步io的引擎，一个基础库。(韩天峰)
	swoole是使用C编写的一个php扩展,用于解决原生php所不支持的异步网络通信和异步io
	
swoole可以做什么?
	swoole是一个异步网络通信引擎,可以用来实现socket\tcp\udp连接通信, 因为是常驻内存可以作为服务端异步处理服务器如:通过队列批量处理数据,处理耗时操作,监控程序,主动推送.(重点:异步,多线程,长连接,常驻内存,进程通信)
--------------------------------------------------------------------------------------------------
与Workerman的区别
Workerman是一款纯PHP开发的开源高性能的PHP socket 服务器框架。被广泛的用于手机app、手游服务端、网络游戏服务器、聊天室服务器、硬件通讯服务器、智能家居、车联网、物联网等领域的开发。 支持TCP长连接，支持Websocket、HTTP等协议，支持自定义协议。基于workerman开发者可以更专注于业务逻辑开发，不必再为PHP Socket底层开发而烦恼。
=========================================================================================

1. swoole 扩展安装
	wget http://pecl.php.net/get/swoole-2.1.1.tgz   (php7) http://pecl.php.net/package/swoole
下载后执行命令编译安装
tar zxvf swoole-2.1.1.tgz && cd swoole-2.1.1
phpize
./configure
make 
sudo make install
-------------------------------------------------------------------------
swoole项目已收录到PHP官方扩展库，除了手工下载编译外，还可以通过PHP官方提供的pecl命令，一键下载安装swoole
pecl install swoole
--------------------------------------------------------------------------
修改php.ini 加上extension=swoole.so


========================================================================================================
2. swoole 服务器
------------------------------------------------------------------------------------------------------------
tcp 服务器
$server = new swoole_server("127.0.0.1", 9503);
$server>set(array(
    'worker_num' => 8,   //工作进程数量
    'daemonize' => true, //是否作为守护进程
));
$server->on('connect', function ($server, $fd){      //连接时执行
    echo "connection open: {$fd}\n";
});
$server->on('receive', function ($server, $fd, $reactor_id, $data) {		//接受到信息时执行
    $server->send($fd, "Swoole: {$data}");
    $server->close($fd);
});
$server->on('close', function ($server, $fd) {				//关闭时执行
    echo "connection close: {$fd}\n";
});
$server->start();					//服务开启

connect/receive/close 是线程, 都不是在主线程中执行的(被同一个进程所拥有getmypid())

------------------------------------------------------------------------------------------------------------
udp 服务器

------------------------------------------------------------------------------------------------------------
http 服务器

------------------------------------------------------------------------------------------------------------
websocket 服务器

------------------------------------------------------------------------------------------------------------


------------------------------------------------------------------------------------------------------------


========================================================================================================
3. swoole 客户端
------------------------------------------------------------------------------------------------------------


========================================================================================================
4. 文档
------------------------------------------------------------------------------------------------------------
Tasks	
	