
======================================================================================
主从配置步骤
---------------------------------------------------------------------------
1. 先确保主从服务器数据库数据表一致

-------------------------------------------------------------------------------------------------------------------------------------
2. 在主服务器创建一个同步账号

1）每个从数据库会使用一个MySQL账号来连接主数据库，所以我们要在主数据库里创建一个账号，并且该账号要授予 REPLICATION SLAVE 权限，你可以为每个从数据库分别创建账号，当然也可以用同一个！）

2）你可以用原来的账号不一定要新创账号，但你应该注意，这个账号和密码会被明文存放在master.info文件中，因此建议单独创一个只拥有相关权限的账号，以减少对其它账号的危害！）

CREATE USER 'repl'@'%' IDENTIFIED BY 'repl123';
GRANT REPLICATION SLAVE ON *.* TO 'repl'@'%';   # 仅授予REPLICATION SLAVE权限
# GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY 'root' WITH GRANT OPTION;  全部权限

如果开发防火墙，可能要配置下端口，如下：
firewall-cmd --zone=public --add-port=3306/tcp --permanent
firewall-cmd --reload

-------------------------------------------------------------------------------------------------------------------------------------

3、配置主数据库
1）要主数据库，你必须要启用二进制日志（binary logging），并且创建一个唯一的Server ID，这步骤可能要重启MySQL。
2）主服务器发送变更记录到从服务器依赖的是二进制日志，如果没启用二进制日志，复制操作不能实现（主库复制到从库）。
3）复制组中的每台服务器都要配置唯一的Server ID，取值范围是1到(232)−1，你自己决定取值。
4）配置二进制日志和Server ID，你需要关闭MySQL和编辑my.cnf或者my.ini文件，在 [mysqld] 节点下添加配置。
5）下面是启用二进制日志，日志文件名以“mysql-bin”作为前缀，Server ID配置为1，如下：
[mysqld]
log-bin=mysql-bin
server-id=1
#网络上还有如下配置
#binlog-do-db=mstest //要同步的mstest数据库,要同步多个数据库，就多加几个binlog-do-db=数据库名 #binlog-ignore-db=mysql //要忽略的数据库
#binlog SBR/RBR/MBR 模式下的各优缺点百度 默认SBR  基于SQL语句的复制(statement-based replication, SBR)  binlog_format  = STATEMENT，ROW，MIXED
#其他配置
binlog-ignore-db=information_schema
binlog-ignore-db=cluster
binlog-ignore-db=mysql
binlog-do-db=test
提示1：如果你不配置server-id或者配置值为0，那么主服务器将拒绝所有从服务器的连接。
提示2：在使用InnoDB的事务复制，为了尽可能持久和数据一致，你应该在my.cnf里配置innodb_flush_log_at_trx_commit=1 和 sync_binlog=1；
# For the greatest possible durability and consistency in a replication setup using InnoDB with transactions, you should useinnodb_flush_log_at_trx_commit=1 and sync_binlog=1 in the master my.cnf file.
提示3：确保主服务器里的skip-networking选项未启用，如果网络被禁用，你的从服务器将不能与主服务器通信并且复制失败。



查看主服务器状态，mysql> show master status;
（注意：记录好File和Position，后面要用）


-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

4、配置从数据库

1）从服务器，同理，要分配一个唯一的Server ID，需要关闭MySQL，修改好后再重启，如下：
[mysqld]
server-id=2
#可以指定要复制的库
replicate-do-db = test #在master端不指定binlog-do-db，在slave端用replication-do-db来过滤
replicate-ignore-db = mysql #忽略的库
#其他配置
log-bin=mysql-bin
binlog-ignore-db=information_schema
binlog-ignore-db=cluster
binlog-ignore-db=mysql
log-slave-updates
slave-skip-errors=all
slave-net-timeout=60
#网上还有下面配置
#relay-log=mysqld-relay-bin   定义relay_log的位置和名称，如果值为空，则默认位置在数据文件的目录，文件名为host_name-relay-bin.nnnnnn（By default, relay log file names have the form host_name-relay-bin.nnnnnn in the data directory）； 

提示1：如果有多个从服务器，每个服务器的server-id不能重复，跟IP一样是唯一标识，如果你没设置server-id或者设置为0，则从服务器不会连接到主服务器。
提示2：一般你不需要在从服务器上启用二进制日志，如果你在从服务器上启用二进制日志，那你可用它来做数据备份和崩溃恢复，或者做更复杂的事情（比如这个从服务器用来当作其它从服务器的主服务器）。

#查看二进制日志文件binlog内容
#show binlog events in 'mysql-bin.000002'; (mysql-bin.000002:文件名)

2）配置连接主服务器的信息
mysql> 
stop slave;
CHANGE MASTER TO
MASTER_HOST='192.168.1.233',
MASTER_USER='repl',
MASTER_PASSWORD='repl123',
MASTER_LOG_FILE='mysql-bin.000002',		//前面master >> show master status file 的值
MASTER_LOG_POS=313;				//前面master >> show master status position的值
start slave;

3）查看从服务器状态
show slave status ;

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
5、测试数据同步

至此，主从的配置已经完成了， 目前是在从库里面配置复制“test”这个库，
如果要添加其它库，可以在主服务器中添加“binlog-do-db”配置，或者在从服务器中添加“replicate-do-db”配置。



=======================================================================================================================================